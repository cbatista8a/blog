---
import { type CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

const { post } = Astro.props as { post: CollectionEntry<'blog'> };
const { title, publishDate, updatedDate, featureImage } = post.data;
---

<article class="mb-12 flex flex-col gap-x-8 gap-y-6 sm:flex-row bg-white dark:bg-black rounded-xl border border-[#FFD43B] dark:border-[#FFD43B] shadow-md px-6 py-6">
    <header class="grow">
        <div class="mb-2 text-sm uppercase tracking-wider text-[#8a7c2f] dark:text-[#FFD43B]">
            <FormattedDate date={publishDate} />
            {
                updatedDate && (
                    <span class="ml-2 text-xs text-[#181A2A] dark:text-[#FFD43B] bg-[#FFD43B]/10 dark:bg-[#181A2A]/20 px-2 py-1 rounded-full">(Actualizado <FormattedDate date={updatedDate} />)</span>
                )
            }
        </div>
        <h3 class="text-2xl font-bold text-[#181A2A] dark:text-[#FFD43B]">
            <a href={`/blog/${post.slug}/`} class="hover:text-[#FFD43B] dark:hover:text-white transition-colors">{title}</a>
        </h3>
    </header>
    {
        featureImage?.src && (
            <figure class="shrink-0 sm:w-40 flex items-center justify-center">
                <a href={`/blog/${post.slug}/`} class="flex items-center justify-center w-full no-underline">
                <picture class="w-full h-auto">
                        <source srcset={featureImage.src.replace(/\.(jpg|jpeg|png)$/i, '.webp')} type="image/webp" />
                        <img
                            class="w-full rounded-xl border border-[#FFD43B] dark:border-[#FFD43B] shadow-md"
                            src={featureImage.src}
                            loading="lazy"
                            decoding="async"
                            alt={featureImage.alt || ''}
                            width="280"
                            height="125"
                        />
                    </picture>
                </a>
            </figure>
        )
    }
</article>
