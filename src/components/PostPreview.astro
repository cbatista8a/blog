---
import { type CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

const { post } = Astro.props as { post: CollectionEntry<'blog'> };
const { title, publishDate, updatedDate, featureImage, excerpt, isFeatured } = post.data;
---

<article class="post-card mb-12 sm:mb-16 bg-white dark:bg-black rounded-2xl shadow-lg border border-[#FFD43B] dark:border-[#FFD43B] px-6 py-8">
    <header class="post-card-header">
        <div class="mb-2 text-sm uppercase tracking-wider text-[#8a7c2f] dark:text-[#FFD43B] flex items-center gap-2">
            {
                isFeatured && (
                    <span class="font-bold text-[#FFD43B] dark:text-[#FFD43B]">Featured</span>
                )
            }
            {isFeatured && <span class="text-[#181A2A] dark:text-[#FFD43B]">/</span>}
            <FormattedDate date={publishDate} />
            {
                updatedDate && (
                    <span class="ml-2 text-xs text-[#181A2A] dark:text-[#FFD43B] bg-[#FFD43B]/10 dark:bg-[#181A2A]/20 px-2 py-1 rounded-full">(Actualizado <FormattedDate date={updatedDate} />)</span>
                )
            }
        </div>
        <h2 class="text-3xl font-bold text-[#181A2A] dark:text-[#FFD43B] sm:text-4xl md:text-5xl transition-colors">
            <a href={`/blog/${post.slug}/`} class="hover:text-[#FFD43B] dark:hover:text-white">{title}</a>
        </h2>
    </header>
    {
        featureImage?.src && (
            <figure class="post-card-thumbnail flex items-center justify-center mt-6 mb-6 xl:mb-0">
                <a href={`/blog/${post.slug}/`} class="flex items-center justify-center w-full no-underline">
                    <picture class="w-full h-auto">
                        <source srcset={featureImage.src.replace(/\.(jpg|jpeg|png)$/i, '.webp')} type="image/webp" />
                        <img
                            class="w-full rounded-xl border border-[#FFD43B] dark:border-[#FFD43B] shadow-md"
                            src={featureImage.src}
                            loading="lazy"
                            decoding="async"
                            alt={featureImage.alt || ''}
                            width="280"
                            height="125"
                        />
                    </picture>
                </a>
            </figure>
        )
    }
    {
        excerpt && (
            <div class="post-card-content mt-4">
                <div class="prose prose-slate max-w-none sm:prose-lg text-[#181A2A] dark:text-white">{excerpt}</div>
            </div>
        )
    }
</article>

<style>
    @media (min-width: 1280px) {
        .post-card-header {
            grid-area: header;
        }
        .post-card-content {
            grid-area: content;
        }
        .post-card-thumbnail {
            grid-area: thumbnail;
        }
        .post-card {
            @apply grid gap-x-8;
            grid-template-rows: min-content 1fr;
            grid-template-columns: 1fr 768px 1fr;
            grid-template-areas:
                'thumbnail header'
                'thumbnail content';
        }
    }
</style>
