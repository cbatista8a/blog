---
import { type CollectionEntry, getCollection } from 'astro:content';
import { type Image } from '../../data/site-config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import ReadNextPostPreview from '../../components/ReadNextPostPreview.astro';
import { sortPostsByDateDesc } from '../../utils/post-utils';
import Subscribe from '../../components/Subscribe.astro';

export async function getStaticPaths() {
    const posts = (await getCollection('blog')).sort(sortPostsByDateDesc).filter(({ data }) => !data.draft);
    const postCount = posts.length;
    return posts.map((post, index) => ({
        params: { slug: post.slug },
        props: {
            post,
            prevPost: index + 1 !== postCount ? posts[index + 1] : null,
            nextPost: index !== 0 ? posts[index - 1] : null
        }
    }));
}

const { href } = Astro.url;
const { post, prevPost, nextPost } = Astro.props as { post: CollectionEntry<'blog'>; prevPost: CollectionEntry<'blog'>; nextPost: CollectionEntry<'blog'> };
const { title, publishDate, updatedDate, featureImage, excerpt, isFeatured, seo } = post.data;
const { Content } = await post.render();
let socialImage: Image | undefined;
if (featureImage?.src) {
    socialImage = featureImage;
}
if (seo?.image?.src) {
    socialImage = seo.image;
}
---

<BaseLayout title={seo?.title ?? title} description={seo?.description ?? excerpt} image={socialImage} pageType="article">
    <main class="grow px-4 py-12 sm:px-8 sm:py-16 bg-white dark:bg-black">
        <article class="max-w-6xl mx-auto mb-12 sm:mb-16 bg-white dark:bg-black rounded-2xl shadow-lg border border-[#FFD43B] dark:border-[#FFD43B] px-6 py-8">
            <header class="max-w-3xl mx-auto mb-6 sm:mb-8">
                <div class="mb-3 text-sm uppercase tracking-wider text-dark dark:text-[#FFD43B] flex items-center gap-2">
                    {
                        isFeatured && (
                            <span class="font-bold text-[#181A2A] dark:text-[#FFD43B]">Featured</span>
                        )
                    }
                    {isFeatured && <span class="text-[#181A2A] dark:text-[#FFD43B]">/</span>}
                    <FormattedDate date={publishDate} />
                    {
                        updatedDate && (
                            <span class="ml-2 text-xs text-[#181A2A] dark:text-[#FFD43B] bg-[#FFD43B]/10 dark:bg-[#181A2A]/20 px-2 py-1 rounded-full">(Actualizado <FormattedDate date={updatedDate} />)</span>
                        )
                    }
                </div>
                <h1 class="text-3xl font-bold text-[#181A2A] dark:text-[#FFD43B] sm:text-4xl md:text-5xl">
                    {title}
                </h1>
            </header>
            {
                featureImage?.src && (
                    <figure class="mx-auto my-6 sm:my-8 lg:my-12 flex flex-col items-center justify-center">
                        <picture class="w-full h-auto">
                            <source srcset={featureImage.src.replace(/\.(jpg|jpeg|png)$/i, '.webp')} type="image/webp" />
                            <img
                                class="w-full rounded-xl border border-[#FFD43B] dark:border-[#FFD43B] shadow-md"
                                src={featureImage.src}
                                loading="lazy"
                                decoding="async"
                                alt={featureImage.alt || ''}
                                width="1200"
                                height="630"
                            />
                        </picture>
                        {featureImage.caption && <figcaption class="mt-1.5 text-[xx-small] text-pretty sm:text-sm text-[#181A2A] dark:text-[#FFD43B]">{featureImage.caption}</figcaption>}
                    </figure>
                )
            }
            <div class="max-w-3xl mx-auto">
                <div class="prose dark:prose-invert sm:prose-lg max-w-none">
                    <Content />
                </div>
                <div class="mt-8 flex flex-wrap gap-x-3 text-sm sm:mt-12 sm:text-base">
                    <span class="font-semibold text-[#181A2A] dark:text-[#FFD43B]">Share:</span>
                    <a
                        class="text-dark dark:text-[#FFD43B] underline transition duration-300 hover:text-[#181A2A] dark:hover:text-white font-semibold"
                        href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(href)}&text=${encodeURIComponent(title)}`}
                        target="_blank"
                        rel="noopener noreferer"
                        aria-label="Share on X">X/Twitter</a
                    >
                    <a
                        class="text-dark dark:text-[#FFD43B] underline transition duration-300 hover:text-[#181A2A] dark:hover:text-white font-semibold"
                        href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(href)}`}
                        target="_blank"
                        rel="noopener noreferer"
                        aria-label="Share on Facebook">Facebook</a
                    >
                    <a
                        class="text-dark dark:text-[#FFD43B] underline transition duration-300 hover:text-[#181A2A] dark:hover:text-white font-semibold"
                        href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(href)}&summary=${encodeURIComponent(title)}`}
                        target="_blank"
                        rel="noopener noreferer"
                        aria-label="Share on LinkedIn">LinkedIn</a
                    >
                </div>
            </div>
        </article>
        {
            (prevPost || nextPost) && (
                <div class="max-w-3xl mx-auto mb-12 sm:mb-16">
                    <h2 class="mb-8 text-sm uppercase tracking-wider text-slate-900 dark:text-light after:content-[''] after:block after:w-16 after:h-px after:bg-primary after:mt-4 sm:mb-12">
                        Read Next
                    </h2>
                    {nextPost && <ReadNextPostPreview post={nextPost} />}
                    {prevPost && <ReadNextPostPreview post={prevPost} />}
                </div>
            )
        }
        <Subscribe class="my-12 sm:my-16" />
    </main>
</BaseLayout>
